// SPDX-License-Identifier: GPL-2.0
/*
 * Device Tree Source for the VK-RZV2L board
 *
 * Copyright (C) 2017 Jacopo Mondi <jacopo+renesas@jmondi.org>
 * Copyright (C) 2016 Renesas Electronics
 */

/dts-v1/;
#include <dt-bindings/gpio/gpio.h>
#include "r9a07g054l.dtsi"
#include "r9a07g054l-u-boot.dtsi"
#include <dt-bindings/pinctrl/rzv2l-pinctrl.h>

/ {
	model = "Vekatech vkrzv2l";
	compatible = "renesas,r9a07g054l", "renesas,rzv2l";

	aliases {
		ethernet0 = &eth0;
		ethernet1 = &eth1;
		serial0 = &scif0;
		serial1 = &scif1;
		serial2 = &scif2;
		serial3 = &scif3;
		spi0 = &spibsc;
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c3 = &i2c3;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	memory@48000000 {
		device_type = "memory";
		/* first 128MB is reserved for secure area. */
		reg = <0 0x48000000 0 0x78000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		global_cma: linux,cma@58000000 {
			compatible = "shared-dma-pool";
			linux,cma-default;
			reusable;
			reg = <0x0 0x58000000 0x0 0x10000000>;
		};

		mmp_reserved: linux,multimedia {
			compatible = "shared-dma-pool";
			reusable;
			reg = <0x00000000 0x68000000 0x0 0x8000000>;
		};

		/* device specific region for contiguous allocations */
		drp_reserved: DRP-AI {
			reusable;
			reg = <0x0 0x80000000 0x0 0x20000000>;
		};

		image_buf0: image_buf@0 {
			compatible = "shared-dma-pool";
			reusable;
			reg = <0x0 0xB0000000 0x0 0x04000000>;
			label = "image_buf0";
		};

		isp_work0: SIMPLE_ISP {
			reusable;
			reg = <0x0 0xB4000000 0x0 0x03000000>;
		};
	};

	udmabuf@0 {
		compatible = "ikwzm,u-dma-buf";
		device-name = "udmabuf0";
		minor-number = <0>;
		size = <0x4000000>; /* 64MiB */
		dma-coherent;
		memory-region = <&image_buf0>;
	};

	mmngr {
		compatible = "renesas,mmngr";
		memory-region = <&mmp_reserved>;
	};

	mmngrbuf {
		compatible = "renesas,mmngrbuf";
	};

	vspm_if {
		compatible = "renesas,vspm_if";
	};

	reg_1p8v: regulator0 {
		compatible = "regulator-fixed";
		regulator-name = "fixed-1.8V";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_3p3v: regulator1 {
		compatible = "regulator-fixed";
		regulator-name = "fixed-3.3V";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		regulator-always-on;
	};
	
	reg_1p1v: regulator-vdd-core {
		compatible = "regulator-fixed";
		regulator-name = "fixed-1.1V";
		regulator-min-microvolt = <1100000>;
		regulator-max-microvolt = <1100000>;
		regulator-boot-on;
		regulator-always-on;
	};

	reg_1p2v: regulator-ddr {
		compatible = "regulator-fixed";
		regulator-name = "fixed-1.2V";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-boot-on;
		regulator-always-on;
	};

	leds {
		compatible = "gpio-leds";
		led_red {
			gpios = <&pinctrl RZG2L_GPIO(8, 2) GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "on";
		};

		led_green {
			gpios = <&pinctrl RZG2L_GPIO(17, 2) GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		led_blue {
			gpios = <&pinctrl RZG2L_GPIO(19, 1) GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		led_yellow {
			gpios = <&pinctrl RZG2L_GPIO(15, 0) GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};
	};

	/* RZ/V2L don't support both falling-edge and rising-edge detect */
	keys {
		compatible = "gpio-keys";
		user_key {
			label = "SB2";
			linux,code = <KEY_1>;
			debounce-interval = <20>;
			gpios = <&pinctrl RZG2L_GPIO(39, 0) GPIO_ACTIVE_LOW>;
		};
	};

	backlight: backlight {
		compatible = "pwm-backlight";
		enable-gpios = <&pinctrl RZG2L_GPIO(43, 3) GPIO_ACTIVE_HIGH>;
		pwms = <&gpt5 0 40000 0>;
		brightness-levels = <0 8 32 64 96 128 160 192 224 255>;
		default-brightness-level = <8>;
		status = "disabled";
	};

	usb0-select {
		label = "usb0-sel";
		gpios = <&P5 2 GPIO_ACTIVE_HIGH>;
	};
};

&pinctrl {
	eth0_pins: eth0 {
		pinmux = <RZV2L_PINMUX(20, 0, 1)>,
			<RZV2L_PINMUX(20, 1, 1)>,
			<RZV2L_PINMUX(20, 2, 1)>,
			<RZV2L_PINMUX(21, 0, 1)>,
			<RZV2L_PINMUX(21, 1, 1)>,
			<RZV2L_PINMUX(22, 0, 1)>,
			<RZV2L_PINMUX(23, 0, 1)>,
			<RZV2L_PINMUX(23, 1, 1)>,
			<RZV2L_PINMUX(24, 0, 1)>,
			<RZV2L_PINMUX(24, 1, 1)>,
			<RZV2L_PINMUX(25, 0, 1)>,
			<RZV2L_PINMUX(25, 1, 1)>,
			<RZV2L_PINMUX(26, 0, 1)>,
			<RZV2L_PINMUX(26, 1, 1)>,
			<RZV2L_PINMUX(27, 0, 1)>,
			<RZV2L_PINMUX(27, 1, 1)>,
			<RZV2L_PINMUX(28, 0, 1)>,
			<RZV2L_PINMUX(28, 1, 1)>;
	};

	eth1_pins: eth1 {
		pinmux = <RZG2L_PORT_PINMUX(37, 2, 1)>, /* ET1_LINKSTA */
			 <RZG2L_PORT_PINMUX(37, 0, 1)>, /* ET1_MDC */
			 <RZG2L_PORT_PINMUX(37, 1, 1)>, /* ET1_MDIO */
			 <RZG2L_PORT_PINMUX(29, 0, 1)>, /* ET1_TXC */
			 <RZG2L_PORT_PINMUX(29, 1, 1)>, /* ET1_TX_CTL */
			 <RZG2L_PORT_PINMUX(30, 0, 1)>, /* ET1_TXD0 */
			 <RZG2L_PORT_PINMUX(30, 1, 1)>, /* ET1_TXD1 */
			 <RZG2L_PORT_PINMUX(31, 0, 1)>, /* ET1_TXD2 */
			 <RZG2L_PORT_PINMUX(31, 1, 1)>, /* ET1_TXD3 */
			 <RZG2L_PORT_PINMUX(33, 1, 1)>, /* ET1_RXC */
			 <RZG2L_PORT_PINMUX(34, 0, 1)>, /* ET1_RX_CTL */
			 <RZG2L_PORT_PINMUX(34, 1, 1)>, /* ET1_RXD0 */
			 <RZG2L_PORT_PINMUX(35, 0, 1)>, /* ET1_RXD1 */
			 <RZG2L_PORT_PINMUX(35, 1, 1)>, /* ET1_RXD2 */
			 <RZG2L_PORT_PINMUX(36, 0, 1)>; /* ET1_RXD3 */
	};

	i2c0_pins: i2c0 {
		pins = "RIIC0_SDA", "RIIC0_SCL";
		input-enable;
	};

	i2c1_pins: i2c1 {
		pins = "RIIC1_SDA", "RIIC1_SCL";
		input-enable;
	};

	i2c2_pins: i2c2 {
			pinmux = <RZV2L_PINMUX(46, 0, 4)>,
						<RZV2L_PINMUX(46, 1, 4)>;
	}; 

	i2c3_pins: i2c3 {
			pinmux = <RZV2L_PINMUX(18, 0, 3)>,
						<RZV2L_PINMUX(18, 1, 3)>;
	}; 

	scif1_pins: scif1 {
			pinmux = <RZV2L_PINMUX(40, 0, 1)>,
						<RZV2L_PINMUX(40, 1, 1)>;
	};

	scif2_pins: scif2 {
			pinmux = <RZV2L_PINMUX(48, 0, 1)>,
						<RZV2L_PINMUX(48, 1, 1)>;
	};

	scif3_pins: scif3 {
			pinmux = <RZV2L_PINMUX(0, 0, 4)>,
						<RZV2L_PINMUX(0, 1, 4)>;
	};

	gpt5_pins: gpt5 {
		pinmux = <RZG2L_PORT_PINMUX(43, 2, 2)>; /* Channel A */
	};

/*
	 * SD0 device selection is XOR between GPIO_SD0_DEV_SEL and SW1[2]
	 * The below switch logic can be used to select the device between
	 * eMMC and microSD, after setting GPIO_SD0_DEV_SEL to high in DT.
	 * SW1[2] should be at position 2/OFF to enable 64 GB eMMC
	 * SW1[2] should be at position 3/ON to enable uSD card CN3
	 */
	sd0-dev-sel-hog {
		gpio-hog;
		gpios = <RZG2L_GPIO(41, 1) GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "sd0_dev_sel";
	};

	sdhi0_emmc_pins: sd0emmc {
		sd0_emmc_data {
			pins = "SD0_DATA0", "SD0_DATA1", "SD0_DATA2", "SD0_DATA3",
			       "SD0_DATA4", "SD0_DATA5", "SD0_DATA6", "SD0_DATA7";
			power-source = <1800>;
		};

		sd0_emmc_ctrl {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <1800>;
		};

		sd0_emmc_rst {
			pins = "SD0_RST#";
			power-source = <1800>;
		};
	};

	sdhi0_pins: sd0 {
		sd0_data {
			pins = "SD0_DATA0", "SD0_DATA1", "SD0_DATA2", "SD0_DATA3";
			power-source = <3300>;
		};

		sd0_ctrl {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <3300>;
		};

		sd0_mux {
			pinmux = <RZG2L_PORT_PINMUX(47, 0, 2)>; /* SD0_CD */
		};
	};

	sdhi0_pins_uhs: sd0_uhs {
		sd0_data_uhs {
			pins = "SD0_DATA0", "SD0_DATA1", "SD0_DATA2", "SD0_DATA3";
			power-source = <1800>;
		};

		sd0_ctrl_uhs {
			pins = "SD0_CLK", "SD0_CMD";
			power-source = <1800>;
		};

		sd0_mux_uhs {
			pinmux = <RZG2L_PORT_PINMUX(47, 0, 2)>; /* SD0_CD */
		};
	};

};

&xinclk {
        clock-frequency = <24000000>;
};

&gpu {
	mali-supply = <&reg_1p1v>;
};

&drpai0 {
	memory-region = <&drp_reserved>;
	linux-memory-region = < &{/memory@48000000} >;
	status = "okay";
};

&wdt0 {
	status = "okay";
	timeout-sec = <60>;
};

&wdt1 {
	status = "okay";
	timeout-sec = <60>;
};

&wdt2 {
	status = "okay";
	timeout-sec = <60>;
};

&scif0 {
        status = "okay";
        clock = <100000000>;
};

&scif1 {
        pinctrl-names = "default";
        pinctrl-0 = <&scif1_pins>;

        status = "okay";
};

&scif2 {
        pinctrl-names = "default";
        pinctrl-0 = <&scif2_pins>;

        status = "okay";
};


&scif3 {
        pinctrl-names = "default";
        pinctrl-0 = <&scif3_pins>;

        status = "okay";
};

&sdhi0 {
	pinctrl-0 = <&sdhi0_pins>;
	pinctrl-1 = <&sdhi0_pins_uhs>;
	pinctrl-names = "default", "state_uhs";

	vmmc-supply = <&reg_3p3v>;
	bus-width = <4>;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	status = "okay";
};

&sdhi0 {
	pinctrl-0 = <&sdhi0_emmc_pins>;
	pinctrl-1 = <&sdhi0_emmc_pins>;
	pinctrl-names = "default", "state_uhs";

	vmmc-supply = <&reg_3p3v>;
	vqmmc-supply = <&reg_1p8v>;
	bus-width = <8>;
	mmc-hs200-1_8v;
	non-removable;
	fixed-emmc-driver-type = <1>;
	status = "okay";
};

&eth0 {
	pinctrl-names = "default";
	pinctrl-0 = <&eth0_pins>;
	phy-handle = <&phy0>;
	phy-mode = "rgmii-id";
	status = "okay";

	phy0: ethernet-phy@1 {
		compatible = "ethernet-phy-ieee802.3-c22";
		reg = <4>;
		reset-gpios = <&pinctrl RZG2L_GPIO(39, 2) GPIO_ACTIVE_LOW>;
		interrupt-parent = <&pinctrl>;
		interrupts = <RZG2L_GPIO(1, 0) IRQ_TYPE_LEVEL_LOW>;
	};
};

&eth1 {
	pinctrl-names = "default";
	pinctrl-0 = <&eth1_pins>;
	phy-handle = <&phy1>;
	phy-mode = "rgmii-id";
	status = "okay";

	phy0: ethernet-phy@2 {
		compatible = "ethernet-phy-ieee802.3-c22";
		reg = <4>;
		reset-gpios = <&pinctrl RZG2L_GPIO(7, 0) GPIO_ACTIVE_LOW>;
		interrupt-parent = <&pinctrl>;
		interrupts = <RZG2L_GPIO(1, 1) IRQ_TYPE_LEVEL_LOW>;
	};
};

&ehci0 {
        status = "okay";
}; 

&ehci1 {
        status = "okay";
};


&i2c0 {
        pinctrl-names = "default";
        status = "okay";
};

&i2c1 {
	pinctrl-0 = <&i2c1_pins>;
	pinctrl-names = "default";
	clock-frequency = <100000>;
	status = "okay";

	it6161: hdmi@6c {
		compatible = "ite,it6161";
		reg = <0x6c>;
		status = "disabled";

		it6161-addr-hdmi-tx = <0x4c>;
		interrupt-parent = <&pinctrl>;
		interrupts = <RZG2L_GPIO(1, 1) IRQ_TYPE_NONE>;

		switch-gpios = <&pinctrl RZG2L_GPIO(43, 0) GPIO_ACTIVE_LOW>;
		reset-gpios = <&pinctrl RZG2L_GPIO(19, 0) GPIO_ACTIVE_LOW>;

		#sound-dai-cells = <0>;
		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@1 {
				reg = <1>;
				it6161_out: endpoint@1 {
					remote-endpoint = <&hdmi_con_out>;
				};
			};

			port@2 {
				reg = <2>;
				codec_endpoint: endpoint {
					remote-endpoint = <&i2s2_cpu_endpoint>;
				};
			};
		};
	};

	gt911: gt911_ts@14 {
		compatible = "goodix,gt911";
		reg = <0x14>;

		interrupt-parent = <&pinctrl>;
		interrupts = <RZG2L_GPIO(2, 1) IRQ_TYPE_EDGE_FALLING>;
		irq-gpios = <&pinctrl RZG2L_GPIO(2, 1) GPIO_ACTIVE_HIGH>;   /* DSI_TS_nINT */
		reset-gpios = <&pinctrl RZG2L_GPIO(43, 1) GPIO_ACTIVE_HIGH>; /* DSI_TS_RST */
		touchscreen-size-x = <720>;
		touchscreen-size-y = <1280>;
		status = "disabled";
	};
};

&i2c2 {
        pinctrl-0 = <&i2c2_pins>;
        pinctrl-names = "default";
        status = "okay";
};

&i2c3 {
        pinctrl-0 = <&i2c3_pins>;
        pinctrl-names = "default";
        status = "okay";

        versa3: versa3@68 {
                compatible = "renesas,5p35023";
                reg = <0x68>;
                #clock-cells = <1>;
                clocks = <&xinclk>;
                clock-names = "x1";
                renesas,settings = [
                 00 00 11 19 00 42 cc 2b 04 32 00 1a 5f 12 90 79
                 02 4c 00 00 00 00 00 00 10 24 19 bf 3f 30 90 86
                 80 b2 05 c4 9c 
                ];
                assigned-clocks = <&versa3 0>,
                                  <&versa3 1>,
                                  <&versa3 2>,
                                  <&versa3 3>,
                                  <&versa3 4>,
                                  <&versa3 5>;
                assigned-clock-rates = <12288000>, <25000000>,
                                       <25000000>, <12288000>,
                                       <11289600>, <24000000>;
        };
};

&spibsc {
        num-cs = <1>;
        status = "okay";
        spi-max-frequency = <40000000>;
        #address-cells = <1>;
        #size-cells = <0>;
        flash0: spi-flash@0 {
                #address-cells = <1>;
                #size-cells = <1>;
                compatible = "spi-flash", "jedec,spi-nor";
                spi-max-frequency = <40000000>;
                spi-tx-bus-width = <1>;
                spi-rx-bus-width = <1>;
                reg = <0>;
                status = "okay";
        };
};

&gpt5 {
	pinctrl-0 = <&gpt5_pins>;
	pinctrl-names = "default";
	channel="channel_A";
	poeg = <&poegd>;
	status = "disabled";
};

&dsi0 {
	status = "disabled";
	#address-cells = <1>;
	#size-cells = <0>;

	mipi_panel: panel@0 {
		compatible = "ilitek,ili9881c";
		reg = <0>;
		dsi-lanes = <2>;
		switch-gpios = <&pinctrl RZG2L_GPIO(43, 0) GPIO_ACTIVE_HIGH>;
		backlight = <&backlight>;
		status = "disabled";
	};
};
